@mixin media($width) {
  @media only screen and (max-width: $width) {
    @content;
  }
}

@mixin darkTheme() {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

@mixin lightTheme() {
  @media (prefers-color-scheme: light) {
    @content;
  }
}

@mixin hide {
  transform: scale(0);
  opacity: 0;
  max-height: 0;
}

@mixin overlay {
  position: absolute;
  width: 100vw;
  height: 100vh;

  :global .overlay {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
  }
}

@mixin alignChildren($justify, $align) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin actionContainer {
  display: flex;
  justify-content: flex-end;

  margin-top: 1rem;
}

@mixin fullScreen {
  position: absolute;
  
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
}

@mixin elevation($depth) {
  @if $depth < 1 {
    box-shadow: none;
  } @else if $depth > 5 {
    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
  } @else {
    box-shadow: bottom-shadow($depth), top-shadow($depth);
  }
}

@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}

@mixin elevatedColor($hue, $sat, $lightnessMap, $depth) {
  background-color: hsl($hue, $sat, nth($lightnessMap, $depth))
}